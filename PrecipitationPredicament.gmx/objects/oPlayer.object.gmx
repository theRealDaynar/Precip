<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSmallerDudes</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>umbrella = instance_create(x + 25,y,oUmbrella)
umbrella.owner = id
wetness = 0
jump = false

l_leg_angle = 0
r_leg_angle = 0
l_leg_as = 1
r_leg_as = 1
max_vel = 1000
c = 0

lightning_timer = room_speed * 15
alarm[0] = lightning_timer 
shocked = false
shock_timer = room_speed * 3

//ai
commit_dir = 1
rumble_timer = room_speed/2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ai</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if c = 1 or c = 2
    gamepad_set_vibration(c - 1, 0, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shocked = false
alarm[0] = lightning_timer
image_alpha = 1
umbrella.phy_active = true
umbrella.image_alpha = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shocked = true
umbrella.phy_active = false
umbrella.image_alpha = .5
alarm[1] = shock_timer
var lightning = instance_create(x,0,oLightningEffect)
with(lightning)
{
    end_x = x
    end_y = other.y
    event_perform(ev_other,ev_user0)
}
if c = 1 or c = 2
{
    gamepad_set_vibration(c - 1, 1, 1)
    alarm[10] = rumble_timer
}
audio_play_sound(sLightning,1,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if c = 3 //ai
{
    var e; //enemy
    with(oPlayer)
    {
        if id != other.id
        {
            e = id
        }
    }
    // jump and move back if other player is thrusting
    if e.umbrella.thrust and distance_to_object(e) &lt; 300
    {
        if alarm[11] &lt;= 0
        {
            if e.x &gt; x
                commit_dir = -1
            else
                commit_dir = 1 
            alarm[0] = lightning_timer 
            alarm[11] = room_speed/2
        }
        physics_apply_impulse(phy_position_x,phy_position_y,commit_dir*200,0)
    }
    else
    {
        if alarm[11] &lt;= 0
        {
            if distance_to_object(e) &gt; 300
                if e.x &gt; x
                    commit_dir = 1
                else
                    commit_dir = -1
            else if distance_to_object(e) &lt; 150
                if e.x &gt; x
                    commit_dir = -1
                else
                    commit_dir = 1 
            else
            {
                var r = random(1)
                if r &lt; .1
                    commit_dir = 1 
                else if r &lt; .2
                    commit_dir = -1
                else
                    commit_dir = 0
            }     
            alarm[11] = room_speed/8
            if commit_dir != 0
                alarm[0] = lightning_timer
        }
        physics_apply_impulse(phy_position_x,phy_position_y,commit_dir*200,0)
        if commit_dir != 0 and jump = false and !audio_is_playing(sTap)
            audio_play_sound(sTap,1,0)
    }
    if jump = false and random(1) &lt; .001
        {
            physics_apply_impulse(phy_position_x,phy_position_y + 10,0,-20000)
            jump = true
            alarm[0] = lightning_timer
            audio_play_sound(sJump,1,0)
        }
}
else if c = 1 or c = 2
{
    if gamepad_axis_value(c - 1, gp_axislh) &lt; -.5 and abs(phy_linear_velocity_x) &lt;= max_vel
    {
        physics_apply_impulse(phy_position_x,phy_position_y,-200,0)
        alarm[0] = lightning_timer 
        if jump = false and !audio_is_playing(sTap)
            audio_play_sound(sTap,1,0)
    }else if gamepad_axis_value(c - 1, gp_axislh) &gt; .5  and abs(phy_linear_velocity_x) &lt;= max_vel
    {
        physics_apply_impulse(phy_position_x,phy_position_y,200,0)
        alarm[0] = lightning_timer 
        if jump = false and !audio_is_playing(sTap)
            audio_play_sound(sTap,1,0)
    }if jump = false and gamepad_button_value(c - 1, gp_shoulderl)
    {
        physics_apply_impulse(phy_position_x,phy_position_y + 10,0,-20000)
        jump = true
        alarm[0] = lightning_timer 
        audio_play_sound(sJump,1,0)
    }
}
else
{
    if keyboard_check(ord("A")) and abs(phy_linear_velocity_x) &lt;= max_vel
    {
        if jump = false and !audio_is_playing(sTap)
            audio_play_sound(sTap,1,0)
        physics_apply_impulse(phy_position_x,phy_position_y,-200,0)
        alarm[0] = lightning_timer 
    }else if keyboard_check(ord("D")) and abs(phy_linear_velocity_x) &lt;= max_vel
    {
            physics_apply_impulse(phy_position_x,phy_position_y,200,0)
        alarm[0] = lightning_timer 
        if jump = false and !audio_is_playing(sTap)
            audio_play_sound(sTap,1,0)
    }if jump = false and keyboard_check_pressed(ord("W"))
    {
        physics_apply_impulse(phy_position_x,phy_position_y + 10,0,-20000)
        jump = true    
        alarm[0] = lightning_timer 
        audio_play_sound(sJump,1,0)
    }
}

if abs(phy_linear_velocity_x) &lt; 10
{
l_leg_angle = 0
r_leg_angle = 0
}
else
{
l_leg_angle -= l_leg_as * abs(phy_linear_velocity_x)/max_vel * 15
r_leg_angle += r_leg_as * abs(phy_linear_velocity_x)/max_vel * 15
if l_leg_angle &gt; 15
    l_leg_as = 1
else if l_leg_angle &lt; -5
    l_leg_as = -1
if r_leg_angle &lt; -15
    r_leg_as = 1 
else if r_leg_angle &gt; 5
    r_leg_as = -1
}

//lightning hint
if alarm[0] &lt; lightning_timer * .5 and random(1) &lt; .01
{
if c = 1 or c = 2
{
    gamepad_set_vibration(c - 1, .2, .2)
    alarm[10] = rumble_timer
}
var lightning = instance_create(x,0,oLightningEffect)
with(lightning)
{
    end_x = x
    end_y = other.y - 200
    event_perform(ev_other,ev_user0)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSideBarrier">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stay in view</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oWall">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stuff</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jump = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oRain2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wetness += 10
with(other)
    instance_destroy()
if wetness &gt;= 100 and oController.game_over = false
{
    oController.game_over = true
    if image_xscale = 1
        oController.winner = 1
    else
        oController.winner = 2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayer">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stuff</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
if image_xscale &lt; 0
{
draw_sprite_ext(sSmallerLegs,0,x,y,image_xscale,image_yscale,image_angle + l_leg_angle,image_blend,image_alpha)
draw_sprite_ext(sSmallerLegs,1,x,y,image_xscale,image_yscale,image_angle + r_leg_angle,image_blend,image_alpha)

}
else
{
draw_sprite_ext(sSmallerLegs,0,x,y,image_xscale,image_yscale,image_angle + r_leg_angle,image_blend,image_alpha)
draw_sprite_ext(sSmallerLegs,1,x,y,image_xscale,image_yscale,image_angle + l_leg_angle,image_blend,image_alpha)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>2</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.300000011920929</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>999999</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>17.25,32.25</point>
    <point>68.5,32.25</point>
    <point>68.5,154.75</point>
    <point>17.25,154.75</point>
  </PhysicsShapePoints>
</object>
