<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create players
audio_stop_all()

audio_play_sound(sBG_RAIN,1,1)
audio_play_sound(sNEWMUSIC,1,1)

rain_speed = room_speed / 30
alarm[1] = rain_speed
wind_change_timer = room_speed * 15

wind_speed = 0

//menu
ini_open("settings.ini")
p1c = ini_read_real("settings","p1c",0) // 0 = kb mouse
p2c = ini_read_real("settings","p2c",1) // 1 = controller 1
ini_close()
        // 2 = controller 2//*/
selected_menu_option = 0
menu = true
menu_delay = room_speed/4
draw_set_font(font0)
game_over = false
winner = -1
win_angle = 0
win_angle_spd = 1
win_angle_max = 15
win_angle_dir = 1

lightning_effect_min_timer = room_speed/2
lightning_effect_max_timer = room_speed * 2
lightning_effect_height = 300
lightning_effect_color = make_colour_rgb(110,110,110)
lightning_effect_width = 3
alarm[4] = random(lightning_effect_max_timer - lightning_effect_min_timer) + lightning_effect_min_timer 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var lightning = instance_create(random(room_width),0,oLightningEffect);
lightning.end_x = lightning.x
lightning.end_y = lightning_effect_height
lightning.width = lightning_effect_width
lightning.image_blend = lightning_effect_color
lightning.depth = 5
with(lightning)
    event_perform(ev_other,ev_user0)
alarm[4] = random(lightning_effect_max_timer - lightning_effect_min_timer) + lightning_effect_min_timer 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu delay</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[2] = wind_change_timer
wind_speed = irandom(16 * 2) - 15
rain_speed = room_speed/((random(5)+.1) * 30)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if rain_speed &lt; 1
alarm[1] = 1
else
alarm[1] = rain_speed
repeat(ceil(1/rain_speed))
{
var rain_drop = instance_create(random(room_width+600)-300,-10,oRain2);
var ws = wind_speed * 100
with(rain_drop)
    physics_apply_force(x, y, ws, 0)
repeat(2)
{
rain_drop = instance_create(random(room_width+600)-300,-10,oRainBG);
ws = wind_speed * 100
with(rain_drop)
    physics_apply_force(x, y, ws, 0)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(objclouds, 0, 0)
alarm[0] = 1200
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if menu = true
{
    //cycle through menu using kb/controller
    if alarm[3] &lt;= 0
    {
        //cycle up through menu
        if keyboard_check(ord("W")) or gamepad_axis_value(0,gp_axislv) &lt; -.3 or gamepad_axis_value(1,gp_axislv) &lt; -.3
        {
            audio_play_sound(sMENU,1,0)
            selected_menu_option --
            if selected_menu_option &lt; 0
                selected_menu_option = 2
            alarm[3] = menu_delay
        }
        //cycle down through menu
        else if keyboard_check(ord("S")) or gamepad_axis_value(0,gp_axislv) &gt; .3 or gamepad_axis_value(1,gp_axislv) &gt; .3
        {
            audio_play_sound(sMENU,1,0)
            selected_menu_option ++
            if selected_menu_option &gt; 2
                selected_menu_option = 0
            alarm[3] = menu_delay
        }
        //cycle right through options
        else if keyboard_check(ord("D")) or gamepad_axis_value(0,gp_axislh) &gt; .3 or gamepad_axis_value(1,gp_axislh) &gt; .3
        {
            audio_play_sound(sMENU,1,0)
            if selected_menu_option = 0
            {
                p1c ++
                if p1c &gt; 3
                    p1c = 0
                if p1c = p2c and p1c != 3
                {
                    p1c++
                    if p1c &gt; 3
                        p1c = 0
                }
                alarm[3] = menu_delay
            }
            else if selected_menu_option = 1
            {
                p2c ++
                if p2c &gt; 3
                    p2c = 0
                if p1c = p2c and p2c != 3
                {
                    p2c++
                    if p2c &gt; 3
                        p2c = 0
                }
                alarm[3] = menu_delay
            }
        }
        //cycle left through options
        else if keyboard_check(ord("A")) or gamepad_axis_value(0,gp_axislh) &lt; -.3 or gamepad_axis_value(1,gp_axislh) &lt; -.3
        {
            audio_play_sound(sMENU,1,0)
            if selected_menu_option = 0
            {
                p1c --
                if p1c &lt; 0
                    p1c = 3
                if p1c = p2c and p1c != 3
                {
                    p1c--
                    if p1c &lt; 0
                        p1c = 3
                }
                alarm[3] = menu_delay
            }
            else if selected_menu_option = 1
            {
                p2c --
                if p2c &lt; 0
                    p2c = 3
                if p1c = p2c and p2c != 3
                {
                    p2c--
                    if p2c &lt; 0
                        p2c = 3
                }
                alarm[3] = menu_delay
            }
        }
    }
    //start game
    if selected_menu_option = 2 and ( keyboard_check_pressed(vk_space) or keyboard_check_pressed(vk_enter) or gamepad_button_check_pressed(0,gp_face1) or gamepad_button_check_pressed(1,gp_face1) )
    {
        audio_play_sound(sMENU,1,0)
        p1 = instance_create(100,room_height - 300,oPlayer)
        p1.image_xscale = -1
        p1.umbrella.image_xscale = -1
        p1.c = p1c
        p2 = instance_create(room_width - 100,room_height - 300,oPlayer)
        p2.c = p2c
        alarm[2] = wind_change_timer
        menu = false
        ini_open("settings.ini")
        ini_write_real("settings","p1c",p1c) // 0 = kb mouse
        ini_write_real("settings","p2c",p2c) // 1 = controller 1
        ini_close()
    }
    
}
else if game_over
{
    win_angle += win_angle_spd * win_angle_dir
    if win_angle &gt;= win_angle_max or win_angle &lt;= -win_angle_max
        win_angle_dir *= -1
    if keyboard_check_pressed(vk_space) or gamepad_button_check_pressed(0,gp_face1) or gamepad_button_check_pressed(1,gp_face1)
            room_restart()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UI
if menu = false
{
    //Player 1
    draw_text_color(10,10,"Player 1",c_white,c_white,c_white,c_white,1)
    draw_healthbar(10,40,110,45,p1.wetness,c_gray,c_blue,c_blue,fa_left,true,false)
    
    draw_set_halign(fa_right)
    draw_text_color(room_width - 10,10,"Player 2",c_white,c_white,c_white,c_white,1)
    draw_healthbar(room_width - 110,40,room_width - 10,45,p2.wetness,c_gray,c_blue,c_blue,1,true,false)
    
    //wind
    draw_set_halign(fa_center)
    draw_text_color(room_width/2,10,"Wind Speed " + string(wind_speed),c_white,c_white,c_white,c_white,1)
    draw_text_color(room_width/2,40,"Intensity " + string(1/rain_speed),c_white,c_white,c_white,c_white,1)
    var sec = floor(alarm[2]/room_speed)
    var milisec = round((alarm[2]/room_speed - sec) * 100)
    draw_text_color(room_width/2,70,string(sec) + ":" + string(milisec),c_white,c_white,c_white,c_white,1)
    draw_set_halign(fa_left)
    
    //gameover
    if game_over
    {
        draw_set_halign(fa_center)
        draw_set_valign(fa_center)
        draw_set_font(font1)
        draw_text_transformed_color(room_width/2,room_height/2,"Player " + string(winner) + " wins!",1,1,win_angle,c_white,c_white,c_white,c_white,1)
        draw_set_font(font0)
        draw_text_color(room_width/2,room_height/2 + 60,"Press space on keyboard or A on gamepad to restart.",c_white,c_white,c_white,c_white,1)
        draw_set_halign(fa_left)
        draw_set_valign(fa_top)
    }
}
else
{
    var strc1,strc2;
    if p1c = 0
        strc1 = "Keyboard &amp; Mouse"
    else if p1c = 1
        strc1 = "Controller 1"
    else if p1c = 2
        strc1 = "Controller 2"
    else
        strc1 = "Bot"
    if p2c = 0
        strc2 = "Keyboard &amp; Mouse"
    else if p2c = 1
        strc2 = "Controller 1"
    else if p2c = 2
        strc2 = "Controller 2"
    else
        strc2 = "Bot"
    draw_set_halign(fa_center)
    var c1 = c_white;
    var c2 = c_white;
    var c3 = c_white;
    if selected_menu_option = 0
        c1 = c_blue
    else if selected_menu_option = 1
        c2 = c_blue
    else
        c3 = c_blue
    draw_text_color(room_width/2,room_height/2 - 30,"P1 " + strc1,c1,c1,c1,c1,1)
    draw_text_color(room_width/2,room_height/2,"P2 " + strc2,c2,c2,c2,c2,1)
    draw_text_color(room_width/2,room_height/2 + 30,"Start Game",c3,c3,c3,c3,1)
    draw_set_halign(fa_left)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
